// MIR for `preserve_args_inl` after Inline

fn preserve_args_inl() -> Gc<NeedsFinalize> {
    let mut _0: std::gc::Gc<NeedsFinalize>; // return place in scope 0 at $DIR/prevent_early_finalization.rs:34:27: 34:44
    let _1: std::gc::Gc<NeedsFinalize>;  // in scope 0 at $DIR/prevent_early_finalization.rs:35:9: 35:12
    let mut _2: std::gc::Gc<NeedsFinalize>; // in scope 0 at $DIR/prevent_early_finalization.rs:35:39: 35:66
    let mut _3: NeedsFinalize;           // in scope 0 at $DIR/prevent_early_finalization.rs:35:47: 35:65
    let mut _4: std::gc::Gc<NeedsFinalize>; // in scope 0 at $DIR/prevent_early_finalization.rs:35:68: 35:95
    let mut _5: NeedsFinalize;           // in scope 0 at $DIR/prevent_early_finalization.rs:35:76: 35:94
    let mut _7: NeedsFinalize;           // in scope 0 at $DIR/prevent_early_finalization.rs:36:21: 36:41
    let mut _8: usize;                   // in scope 0 at $DIR/prevent_early_finalization.rs:36:35: 36:40
    let mut _9: &NeedsFinalize;          // in scope 0 at $DIR/prevent_early_finalization.rs:36:35: 36:40
    let mut _10: &std::gc::Gc<NeedsFinalize>; // in scope 0 at $DIR/prevent_early_finalization.rs:36:35: 36:38
    scope 1 {
        debug ret => _1;                 // in scope 1 at $DIR/prevent_early_finalization.rs:35:9: 35:12
        let _6: std::gc::Gc<NeedsFinalize>; // in scope 1 at $DIR/prevent_early_finalization.rs:36:9: 36:10
        scope 2 {
            debug x => _6;               // in scope 2 at $DIR/prevent_early_finalization.rs:36:9: 36:10
        }
        scope 3 (inlined <Gc<NeedsFinalize> as Deref>::deref) { // at $DIR/prevent_early_finalization.rs:36:35: 36:40
            debug self => _10;           // in scope 3 at $DIR/prevent_early_finalization.rs:36:35: 36:40
            let _11: *const NeedsFinalize; // in scope 3 at $DIR/prevent_early_finalization.rs:36:35: 36:40
            let mut _12: *mut alloc::gc::GcBox<NeedsFinalize>; // in scope 3 at $DIR/prevent_early_finalization.rs:36:35: 36:40
            let mut _13: std::ptr::NonNull<alloc::gc::GcBox<NeedsFinalize>>; // in scope 3 at $DIR/prevent_early_finalization.rs:36:35: 36:40
            scope 4 {
                scope 5 (inlined NonNull::<alloc::gc::GcBox<NeedsFinalize>>::as_ptr) { // at $DIR/prevent_early_finalization.rs:36:35: 36:40
                    debug self => _13;   // in scope 5 at $DIR/prevent_early_finalization.rs:36:35: 36:40
                    let mut _14: *const alloc::gc::GcBox<NeedsFinalize>; // in scope 5 at $DIR/prevent_early_finalization.rs:36:35: 36:40
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:9: 35:12
        StorageLive(_2);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:39: 35:66
        StorageLive(_3);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:47: 35:65
        (_3.0: usize) = const 123_usize; // scope 0 at $DIR/prevent_early_finalization.rs:35:47: 35:65
        _2 = Gc::<NeedsFinalize>::new(move _3) -> [return: bb1, unwind: bb5]; // scope 0 at $DIR/prevent_early_finalization.rs:35:39: 35:66
                                         // mir::Constant
                                         // + span: $DIR/prevent_early_finalization.rs:35:39: 35:46
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(NeedsFinalize) -> std::gc::Gc<NeedsFinalize> {std::gc::Gc::<NeedsFinalize>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:65: 35:66
        StorageLive(_4);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:68: 35:95
        StorageLive(_5);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:76: 35:94
        (_5.0: usize) = const 456_usize; // scope 0 at $DIR/prevent_early_finalization.rs:35:76: 35:94
        _4 = Gc::<NeedsFinalize>::new(move _5) -> [return: bb2, unwind: bb5]; // scope 0 at $DIR/prevent_early_finalization.rs:35:68: 35:95
                                         // mir::Constant
                                         // + span: $DIR/prevent_early_finalization.rs:35:68: 35:75
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(NeedsFinalize) -> std::gc::Gc<NeedsFinalize> {std::gc::Gc::<NeedsFinalize>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_5);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:94: 35:95
        _1 = preserve_args_inl_inner(move _2, move _4) -> bb3; // scope 0 at $DIR/prevent_early_finalization.rs:35:15: 35:96
                                         // mir::Constant
                                         // + span: $DIR/prevent_early_finalization.rs:35:15: 35:38
                                         // + literal: Const { ty: fn(std::gc::Gc<NeedsFinalize>, std::gc::Gc<NeedsFinalize>) -> std::gc::Gc<NeedsFinalize> {preserve_args_inl_inner}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_4);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:95: 35:96
        StorageDead(_2);                 // scope 0 at $DIR/prevent_early_finalization.rs:35:95: 35:96
        StorageLive(_6);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:9: 36:10
        StorageLive(_7);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:21: 36:41
        StorageLive(_8);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageLive(_9);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageLive(_10);                // scope 1 at $DIR/prevent_early_finalization.rs:36:35: 36:38
        _10 = &_1;                       // scope 1 at $DIR/prevent_early_finalization.rs:36:35: 36:38
        StorageLive(_11);                // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageLive(_12);                // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageLive(_13);                // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        _13 = ((*_10).0: std::ptr::NonNull<alloc::gc::GcBox<NeedsFinalize>>); // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageLive(_14);                // scope 5 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        _14 = (_13.0: *const alloc::gc::GcBox<NeedsFinalize>); // scope 5 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        _12 = move _14 as *mut alloc::gc::GcBox<NeedsFinalize> (Misc); // scope 5 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageDead(_14);                // scope 5 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageDead(_13);                // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        _11 = move _12 as *const NeedsFinalize (Misc); // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageDead(_12);                // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        _9 = &(*_11);                    // scope 4 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageDead(_11);                // scope 3 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        StorageDead(_10);                // scope 1 at $DIR/prevent_early_finalization.rs:36:37: 36:38
        _8 = ((*_9).0: usize);           // scope 1 at $DIR/prevent_early_finalization.rs:36:35: 36:40
        (_7.0: usize) = move _8;         // scope 1 at $DIR/prevent_early_finalization.rs:36:21: 36:41
        StorageDead(_8);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:40: 36:41
        _6 = Gc::<NeedsFinalize>::new(move _7) -> [return: bb4, unwind: bb5]; // scope 1 at $DIR/prevent_early_finalization.rs:36:13: 36:42
                                         // mir::Constant
                                         // + span: $DIR/prevent_early_finalization.rs:36:13: 36:20
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(NeedsFinalize) -> std::gc::Gc<NeedsFinalize> {std::gc::Gc::<NeedsFinalize>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_7);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:41: 36:42
        StorageDead(_9);                 // scope 1 at $DIR/prevent_early_finalization.rs:36:42: 36:43
        _0 = _6;                         // scope 2 at $DIR/prevent_early_finalization.rs:37:5: 37:6
        llvm_asm!(LlvmInlineAsmInner { asm: "", asm_str_style: Cooked, outputs: [], inputs: ["r"], clobbers: ["memory"], volatile: true, alignstack: false, dialect: Att } : [] : [(no-location (#0), _1)]); // scope 0 at $DIR/prevent_early_finalization.rs:38:2: 38:2
        StorageDead(_1);                 // scope 0 at $DIR/prevent_early_finalization.rs:38:2: 38:2
        llvm_asm!(LlvmInlineAsmInner { asm: "", asm_str_style: Cooked, outputs: [], inputs: ["r"], clobbers: ["memory"], volatile: true, alignstack: false, dialect: Att } : [] : [(no-location (#0), _6)]); // scope 0 at $DIR/prevent_early_finalization.rs:38:2: 38:2
        StorageDead(_6);                 // scope 0 at $DIR/prevent_early_finalization.rs:38:2: 38:2
        return;                          // scope 0 at $DIR/prevent_early_finalization.rs:38:2: 38:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at $DIR/prevent_early_finalization.rs:34:1: 38:2
    }
}
